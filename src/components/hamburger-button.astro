---
interface Props  {
    color: string;
}

const { color } = Astro.props ;
---
<div
    id="hamburger"
    class="relative w-10 h-10 cursor-pointer flex items-center justify-center">
    <!-- Barra superior -->
    <div
        class={`bar top-bar absolute w-8 h-1 bg-${color} top-2 transition-all duration-300`}>
    </div>

    <!-- Barra del medio -->
    <div
        class={`bar middle-bar absolute w-8 h-1 bg-${color} top-4 transition-all duration-300`}>
    </div>

    <!-- Barra inferior -->
    <div
        class={`bar bottom-bar absolute w-8 h-1 bg-${color} top-6 transition-all duration-300`}>
    </div>
</div>


<script>
    const btn = document.getElementById("hamburger");

    const topBar = btn.querySelector(".top-bar");
    const middleBar = btn.querySelector(".middle-bar");
    const bottomBar = btn.querySelector(".bottom-bar");

    let isOpen = false;

    btn.addEventListener("click", () => {
        isOpen = !isOpen;

        if (isOpen) {
            topBar.classList.add("rotate-45", "top-4");
            topBar.classList.remove("top-2");

            middleBar.classList.add("opacity-0");

            bottomBar.classList.add("-rotate-45", "top-4");
            bottomBar.classList.remove("top-6");
        } else {
            topBar.classList.remove("rotate-45", "top-4");
            topBar.classList.add("top-2");
            
            middleBar.classList.remove("opacity-0");
            
            bottomBar.classList.remove("-rotate-45", "top-4");
            bottomBar.classList.add("top-6");
        }
    });
</script>